# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: $[replace(variables['Build.SourceBranch'], 'refs/heads/main','')]
  containerBaseUrl: irissouthindia.azurecr.io
  containerRepo: iris/iris-ui
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'echo $tag'
    - task: Docker@2
      inputs:
        containerRegistry: 'iris-south-acr'
        repository: 'iris/iris-ui'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifest'
        publishLocation: 'pipeline'
- stage: Deploy
  dependsOn: Build
  displayName: Deploy to AKS
  variables:
    acrsecret: iris-south-acr-auth
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'dev.iris-ns'
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifest'
              targetPath: '$(Pipeline.Workspace)/s/manifests'
          - task: KubernetesManifest@1
            inputs:
              action: 'createSecret'
              connectionType: 'kubernetesServiceConnection'
              namespace: 'iris-ns'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'iris-south-acr'
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              namespace: 'iris-ns'
              manifests: |
                $(Pipeline.Workspace)/s/manifests/deployment.yml
                $(Pipeline.Workspace)/s/manifests/service.yml
              containers: '$(containerBaseUrl)/$(containerBaseRepo):$(tag)'
              
